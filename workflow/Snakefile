configfile: "config/config.yaml"


pepfile: config["pepfile"]


# report: "report/workflow.rst"


include: "rules/common.smk"
include: "rules/local_data.smk"
include: "rules/trimming_filtering.smk"
include: "rules/qualitycontrol.smk"
include: "rules/assembly.smk"
include: "rules/analysis.smk"
include: "rules/assembly_qc.smk"


specific_output = list()

if get_assembly_type() in ["hybrid", "short", "long"]:
    specific_output.append(
        expand("results/{date}/report/multiqc.html", date=get_run_date()),
    ),
    specific_output.append(
        expand(
            "results/{date}/out/assembly/{sample}.fa.gz",
            date=get_run_date(),
            sample=get_samples(),
        ),
    )

if get_assembly_type() in ["short"]:
    specific_output.append(
        expand(
            "results/{date}/report_prerequisites/assembly/{sample}_short_reads_mapped.txt",
            date=get_run_date(),
            sample=get_samples(),
        )
    )

if get_assembly_type() in ["long"]:
    specific_output.append(
        expand(
            "results/{date}/report_prerequisites/assembly/{sample}_long_reads_mapped.txt",
            date=get_run_date(),
            sample=get_samples(),
        )
    )


rule all:
    input:
        expand(
            "results/{date}/analysis/card/{sample}.txt",
            date=get_run_date(),
            sample=get_samples(),
        ),
        expand(
            "results/{date}/analysis/genomad/{sample}/{sample}_summary/{sample}_plasmid_summary.tsv",
            date=get_run_date(),
            sample=get_samples(),
        ),
        specific_output,
        expand(
            "results/{date}/qc/checkm2/{sample}/quality_report.tsv",
            date=get_run_date(),
            sample=get_samples(),
        ),
        expand(
            "results/{date}/analysis/plm_arg/{sample}/{sample}_arg.csv",
            date=get_run_date(),
            sample=get_samples(),
        ),
        expand(
            "results/{date}/qc/quast/{sample}/report.txt",
            date=get_run_date(),
            sample=get_samples(),
        ),
